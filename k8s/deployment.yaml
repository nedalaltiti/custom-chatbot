apiVersion: apps/v1
kind: Deployment
metadata:
  name: hrbot
  labels:
    app: hrbot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hrbot
  template:
    metadata:
      labels:
        app: hrbot
    spec:
      containers:
      - name: hrbot
        image: 794038237159.dkr.ecr.us-west-1.amazonaws.com/hrbot:latest
        ports:
        - containerPort: 3978
        env:
        # ✅ CORRECT: Pass AWS credentials directly from secrets
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: secret-access-key
        - name: AWS_DEFAULT_REGION
          value: "us-west-1"
        - name: USE_AWS_SECRETS
          value: "true"
        - name: AWS_DB_SECRET_NAME
          value: "chatbot-clarity-db-dev-postgres"
        - name: AWS_GEMINI_SECRET_NAME
          value: "genai-gemini-vertex-prod-api"
        # Application settings
        - name: APP_INSTANCE
          value: "jo"  # or "us"
        - name: PYTHONPATH
          value: "/app/src"
        livenessProbe:
          httpGet:
            path: /health
            port: 3978
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 3978
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Secret
metadata:
  name: aws-credentials
type: Opaque
data:
  # ⚠️ IMPORTANT: These should be base64 encoded versions of the EXACT AWS credentials
  # Use: echo -n "AKIA..." | base64 (for the value, not additional encoding)
  access-key-id: <base64-encoded-access-key>
  secret-access-key: <base64-encoded-secret-key>
---
apiVersion: v1
kind: Service
metadata:
  name: hrbot-service
spec:
  selector:
    app: hrbot
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3978
  type: LoadBalancer
