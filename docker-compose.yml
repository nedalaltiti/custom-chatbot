networks:
  hrbot-network:
    driver: bridge
    name: hrbot-network

volumes:
  hrbot-data:
    name: hrbot-data
  postgres-data:
    name: hrbot-postgres-data
  hrbot-logs-jo:
    name: hrbot-logs-jo
  hrbot-logs-us:
    name: hrbot-logs-us

services:
  
  # Shared Infrastructure - PostgreSQL Database (optional - remove if using AWS RDS)
  postgres:
    image: postgres:16-alpine
    container_name: hrbot-postgres
    restart: unless-stopped
    
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-hrbot}
      POSTGRES_USER: ${POSTGRES_USER:-hrbot}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-hrbot123}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    
    ports:
      - "5432:5432"
    
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-hrbot} -d ${POSTGRES_DB:-hrbot}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    
    networks:
      - hrbot-network
    
    profiles:
      - local-db

  # Jordan (jo) Instance
  hrbot-jo:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
      args:
        APP_INSTANCE: jo
    
    image: hrbot:jo-latest
    container_name: hrbot-jo
    restart: unless-stopped
    
    ports:
      - "3978:3978"
    
    env_file:
      - .env.jo
    
    environment:
      - APP_INSTANCE=jo
      - HOSTNAME=hrbot-jo
      - PYTHONPATH=/app/src
      - HOST=0.0.0.0
      - PORT=3978
      # AWS credentials and configuration
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-west-1}
      - AWS_REGION=${AWS_REGION:-us-west-1}
      - AWS_DB_SECRET_NAME=${AWS_DB_SECRET_NAME:-chatbot-clarity-db-dev-postgres}
      - AWS_GEMINI_SECRET_NAME=${AWS_GEMINI_SECRET_NAME:-genai-gemini-vertex-prod-api}
      # Local development overrides
      - USE_AWS_SECRETS=${USE_AWS_SECRETS:-true}
      - SKIP_DB_INIT=${SKIP_DB_INIT:-false}
    
    volumes:
      - hrbot-data:/app/data
      - hrbot-logs-jo:/app/logs
    
    healthcheck:
      test: ["CMD", "python", "/app/healthcheck.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=hrbot-jo,environment=${DEBUG:-production}"
    
    networks:
      - hrbot-network
    
    security_opt:
      - no-new-privileges:true
    
    profiles:
      - jo
      - multi-app
      - development
      - default

  # US Instance
  hrbot-us:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
      args:
        APP_INSTANCE: us
    
    image: hrbot:us-latest
    container_name: hrbot-us
    restart: unless-stopped
    
    ports:
      - "3979:3979"
    
    env_file:
      - .env.us
    
    environment:
      - APP_INSTANCE=us
      - HOSTNAME=hrbot-us
      - PYTHONPATH=/app/src
      - HOST=0.0.0.0
      - PORT=3979
      # AWS credentials and configuration
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-west-1}
      - AWS_REGION=${AWS_REGION:-us-west-1}
      - AWS_DB_SECRET_NAME=${AWS_DB_SECRET_NAME:-chatbot-clarity-db-dev-postgres}
      - AWS_GEMINI_SECRET_NAME=${AWS_GEMINI_SECRET_NAME:-genai-gemini-vertex-prod-api}
      # Local development overrides
      - USE_AWS_SECRETS=${USE_AWS_SECRETS:-true}
      - SKIP_DB_INIT=${SKIP_DB_INIT:-false}
    
    volumes:
      - hrbot-data:/app/data
      - hrbot-logs-us:/app/logs
    
    healthcheck:
      test: ["CMD", "python", "/app/healthcheck.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=hrbot-us,environment=${DEBUG:-production}"
    
    networks:
      - hrbot-network
    
    security_opt:
      - no-new-privileges:true
    
    profiles:
      - us
      - multi-app
      - development

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: hrbot-nginx
    restart: unless-stopped
    
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    
    depends_on:
      - hrbot-jo
      - hrbot-us
    
    networks:
      - hrbot-network
    
    profiles:
      - multi-app
      - production