#!/bin/bash
# Quick fix for AWS Secrets Manager configuration

echo "🔧 Fixing AWS Secrets Manager Configuration"
echo "==========================================="

# Backup existing .env file
if [ -f ".env" ]; then
    cp .env .env.backup
    echo "✅ Backed up existing .env to .env.backup"
fi

# Read current credentials from .env
AWS_ACCESS_KEY_ID=$(grep "AWS_ACCESS_KEY_ID=" .env 2>/dev/null | cut -d'=' -f2)
AWS_SECRET_ACCESS_KEY=$(grep "AWS_SECRET_ACCESS_KEY=" .env 2>/dev/null | cut -d'=' -f2)
MICROSOFT_APP_ID=$(grep "MICROSOFT_APP_ID=" .env 2>/dev/null | cut -d'=' -f2)
MICROSOFT_APP_PASSWORD=$(grep "MICROSOFT_APP_PASSWORD=" .env 2>/dev/null | cut -d'=' -f2)
TENANT_ID=$(grep "TENANT_ID=" .env 2>/dev/null | cut -d'=' -f2)
CLIENT_ID=$(grep "CLIENT_ID=" .env 2>/dev/null | cut -d'=' -f2)
CLIENT_SECRET=$(grep "CLIENT_SECRET=" .env 2>/dev/null | cut -d'=' -f2)

# Create new .env file with correct secret names
cat > .env << EOF
# Fixed AWS Secrets Manager Configuration
# Generated by fix_aws_secrets.sh

# ============================================================================
# AWS CONFIGURATION (FIXED SECRET NAMES)
# ============================================================================
USE_AWS_SECRETS=true
AWS_REGION=us-west-1

# AWS Credentials (your existing ones)
AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

# CORRECT AWS Secret Names (fixed!)
AWS_DB_SECRET_NAME=chatbot-clarity-db-dev-postgres
AWS_GEMINI_SECRET_NAME=genai-gemini-vertex-prod-api

# ============================================================================
# APPLICATION SETTINGS
# ============================================================================
APP_NAME=HR Teams Bot
DEBUG=true
PORT=3978
HOST=0.0.0.0

# ============================================================================
# MICROSOFT TEAMS CREDENTIALS (from your existing .env)
# ============================================================================
MICROSOFT_APP_ID=${MICROSOFT_APP_ID}
MICROSOFT_APP_PASSWORD=${MICROSOFT_APP_PASSWORD}
TENANT_ID=${TENANT_ID}
CLIENT_ID=${CLIENT_ID}
CLIENT_SECRET=${CLIENT_SECRET}

# ============================================================================
# GOOGLE CLOUD (fallback if AWS fails)
# ============================================================================
GOOGLE_APPLICATION_CREDENTIALS=./gemini-deployment-fe9ea6bb8c92.json
GOOGLE_CLOUD_PROJECT=gemini-deployment

# ============================================================================
# HR SUPPORT
# ============================================================================
HR_SUPPORT_URL=https://hrsupport.usclarity.com/support/home
HR_SUPPORT_DOMAIN=hrsupport.usclarity.com

# ============================================================================
# PERFORMANCE SETTINGS
# ============================================================================
USE_INTENT_CLASSIFICATION=false
CACHE_EMBEDDINGS=true
CACHE_TTL_SECONDS=3600
MIN_STREAMING_LENGTH=50
ENABLE_STREAMING=true
STREAMING_DELAY=1.2

# ============================================================================
# SESSION AND FEEDBACK
# ============================================================================
SESSION_IDLE_MINUTES=30
FEEDBACK_TIMEOUT_MINUTES=10

# ============================================================================
# DATABASE SETTINGS
# ============================================================================
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=10
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=1800

# ============================================================================
# CORS SETTINGS
# ============================================================================
CORS_ORIGINS=["*"]
EOF

echo ""
echo "✅ Created new .env file with correct AWS secret names:"
echo "   - AWS_DB_SECRET_NAME=chatbot-clarity-db-dev-postgres"
echo "   - AWS_GEMINI_SECRET_NAME=genai-gemini-vertex-prod-api"
echo ""
echo "🔑 Your AWS credentials are preserved from the old .env file"
echo ""
echo "⚠️  If you still get permission errors, you need AWS permissions."
echo "   See AWS_SECRETS_ISSUE.md for details on getting permissions."
echo ""
echo "🚀 Now try running: poetry run python -m hrbot.api" 