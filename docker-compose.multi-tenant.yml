version: '3.8'

networks:
  hrbot-network:
    driver: bridge
    name: hrbot-network

volumes:
  # Shared data storage
  hrbot-data:
    name: hrbot-data
  hrbot-logs:
    name: hrbot-logs
  
  # Tenant-specific knowledge bases
  hrbot-knowledge-jordan:
    name: hrbot-knowledge-jordan
  hrbot-knowledge-us:
    name: hrbot-knowledge-us
  
  # Tenant-specific embeddings
  hrbot-embeddings-jordan:
    name: hrbot-embeddings-jordan
  hrbot-embeddings-us:
    name: hrbot-embeddings-us

services:
  # Jordan HR Team Instance
  hrbot-jordan:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
      args:
        POETRY_VERSION: 1.6.1
        APP_USER: hrbot
        APP_UID: 1000
        APP_GID: 1000
    
    image: hrbot:latest
    container_name: hrbot-jordan
    
    restart: unless-stopped
    
    ports:
      - "3978:3978"  # Jordan instance on default port
    
    env_file:
      - .env
    
    environment:
      # Tenant Configuration
      - TENANT_REGION=jordan
      - APP_NAME=HR Teams Bot - Jordan
      
      # Container-specific settings
      - PYTHONPATH=/app/src
      - PATH=/app/.venv/bin:$$PATH
      - HOST=0.0.0.0
      - PORT=3978
      
      # Tenant-specific database (optional)
      - DB_NAME=${DB_NAME:-hrbot_jordan}
      
      # Tenant-specific features
      - NOI_ENABLED=true
    
    volumes:
      - hrbot-data:/app/data
      - hrbot-logs:/app/logs
      
      # Tenant-specific knowledge base
      - hrbot-knowledge-jordan:/app/data/knowledge/jordan
      - hrbot-embeddings-jordan:/app/data/embeddings/jordan
    
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:3978/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=hrbot-jordan,tenant=jordan,environment=${DEBUG:-production}"
    
    networks:
      - hrbot-network
    
    security_opt:
      - no-new-privileges:true
    
    user: "1000:1000"

  # US HR Team Instance
  hrbot-us:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
      args:
        POETRY_VERSION: 1.6.1
        APP_USER: hrbot
        APP_UID: 1000
        APP_GID: 1000
    
    image: hrbot:latest
    container_name: hrbot-us
    
    restart: unless-stopped
    
    ports:
      - "3979:3978"  # US instance on different port
    
    env_file:
      - .env
    
    environment:
      # Tenant Configuration
      - TENANT_REGION=us
      - APP_NAME=HR Teams Bot - US
      
      # Container-specific settings
      - PYTHONPATH=/app/src
      - PATH=/app/.venv/bin:$$PATH
      - HOST=0.0.0.0
      - PORT=3978
      
      # Tenant-specific database (optional)
      - DB_NAME=${DB_NAME:-hrbot_us}
      
      # Tenant-specific features
      - NOI_ENABLED=false
      
      # US-specific HR support URL
      - HR_SUPPORT_URL=https://hrsupport.usclarity.com/support/us
    
    volumes:
      - hrbot-data:/app/data
      - hrbot-logs:/app/logs
      
      # Tenant-specific knowledge base
      - hrbot-knowledge-us:/app/data/knowledge/us
      - hrbot-embeddings-us:/app/data/embeddings/us
    
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:3978/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=hrbot-us,tenant=us,environment=${DEBUG:-production}"
    
    networks:
      - hrbot-network
    
    security_opt:
      - no-new-privileges:true
    
    user: "1000:1000"

  # Load Balancer (Optional)
  nginx:
    image: nginx:alpine
    container_name: hrbot-nginx
    restart: unless-stopped
    
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    
    depends_on:
      - hrbot-jordan
      - hrbot-us
    
    networks:
      - hrbot-network
    
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3" 